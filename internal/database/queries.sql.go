// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: queries.sql

package database

import (
	"context"
	"database/sql"
)

const createCustomer = `-- name: CreateCustomer :one
INSERT INTO customers (
  username, password, email, phone, address
) VALUES (
  $1, $2, $3, $4, $5
)
RETURNING id, username, password, email, phone, address
`

type CreateCustomerParams struct {
	Username string
	Password string
	Email    string
	Phone    sql.NullString
	Address  sql.NullString
}

func (q *Queries) CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error) {
	row := q.db.QueryRowContext(ctx, createCustomer,
		arg.Username,
		arg.Password,
		arg.Email,
		arg.Phone,
		arg.Address,
	)
	var i Customer
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Email,
		&i.Phone,
		&i.Address,
	)
	return i, err
}

const getCustomer = `-- name: GetCustomer :one
SELECT id, username, password, email, phone, address FROM customers
WHERE email = $1
`

func (q *Queries) GetCustomer(ctx context.Context, email string) (Customer, error) {
	row := q.db.QueryRowContext(ctx, getCustomer, email)
	var i Customer
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Email,
		&i.Phone,
		&i.Address,
	)
	return i, err
}
